cmake_minimum_required(VERSION 3.16)
project(controller)

set(CMAKE_CXX_STANDARD 17)

#include_directories(BEFORE /usr/local/Cellar/openssl/1.0.2p/include)
#find_library(OPENSSL_LIB ssl PATHS /usr/local/Cellar/openssl/1.0.2p/lib NO_DEFAULT_PATH)
#find_library(CRYPTO_LIB crypto PATHS /usr/local/Cellar/openssl/1.0.2p/lib NO_DEFAULT_PATH)

#find_package(openssl REQUIRED)
find_package(cpprestsdk REQUIRED)

#find_package(libiperf REQUIRED)
find_package(Threads REQUIRED)
find_package(Boost REQUIRED COMPONENTS system thread log program_options chrono)

add_executable(controller main.cpp controller/BasicController/BasicController.cpp controller/BasicController/BasicController.h controller/MasterController.cpp controller/MasterController.h utils/NetworkUtils/NetUtils.cpp utils/NetworkUtils/NetUtils.h utils/boost_imports.h utils/InterruptUtils.h utils/RuntimeUtils.h Services/ProcessOffloadRequest/ProcessOffloadRequest.cpp Services/ProcessOffloadRequest/ProcessOffloadRequest.h utils/LockList/LockList.cpp utils/LockList/LockList.h Services/DeviceRegister/RegisterDevices.cpp Services/DeviceRegister/RegisterDevices.h model/data_models/TaskQueue/TaskQueue.cpp model/data_models/TaskQueue/TaskQueue.h Constants/RequestTypes.h model/enums/RequestTypeEnum.h Services/WorkQueueManager/WorkQueueManager.cpp Services/WorkQueueManager/WorkQueueManager.h model/data_models/WorkItems/BaseWorkItem/WorkItem.cpp model/data_models/WorkItems/BaseWorkItem/WorkItem.h model/data_models/WorkItems/ProcessingItem/ProcessingItem.cpp model/data_models/WorkItems/ProcessingItem/ProcessingItem.h model/data_models/BaseDNNModel/BaseDNNModel.cpp model/data_models/BaseDNNModel/BaseDNNModel.h Constants/LayerType.h model/enums/LayerTypeEnum.h Constants/DNN_Type.h model/enums/DNN_Type_Enum.h Constants/ControllerRequestPaths.h model/data_models/WorkItems/DAGDisruptItem/DAGDisruption.cpp model/data_models/WorkItems/DAGDisruptItem/DAGDisruption.h model/data_models/ComputationDevice/ComputationDevice.cpp model/data_models/ComputationDevice/ComputationDevice.h model/data_models/LinkAct/LinkAct.cpp model/data_models/LinkAct/LinkAct.h model/data_models/Network/Network.cpp model/data_models/Network/Network.h Services/LowCompServices/LowCompServices.cpp Services/LowCompServices/LowCompServices.h Constants/DNNPadding.h model/data_models/BaseResult/BaseResult.cpp model/data_models/BaseResult/BaseResult.h model/data_models/Task/Task.cpp model/data_models/Task/Task.h model/data_models/TileRegion/TileRegion.cpp model/data_models/TileRegion/TileRegion.h Services/AllocationAlgorithmServices/AllocationAlgorithmServices.cpp Services/AllocationAlgorithmServices/AllocationAlgorithmServices.h Constants/CompNetCon.h model/data_models/WorkItems/StateUpdate/StateUpdate.cpp model/data_models/WorkItems/StateUpdate/StateUpdate.h Services/NetworkServices/NetworkServices.cpp Services/NetworkServices/NetworkServices.h model/data_models/CommunicationModels/BaseCommunicationModel/BaseCommModel.cpp model/data_models/CommunicationModels/BaseCommunicationModel/BaseCommModel.h Constants/CommTypes.h model/enums/CommsEnums.h Services/NetworkQueueManager/NetworkQueueManager.cpp Services/NetworkQueueManager/NetworkQueueManager.h model/data_models/NetworkCommsModels/BaseNetworkCommsModel/BaseNetworkCommsModel.cpp model/data_models/NetworkCommsModels/BaseNetworkCommsModel/BaseNetworkCommsModel.h model/enums/NetworkCommsTypes.h Constants/CLIENT_DETAILS.h utils/UtilFunctions/UtilFunctions.cpp utils/UtilFunctions/UtilFunctions.h utils/MultipartParser/MultipartParser.cpp utils/MultipartParser/MultipartParser.h utils/IPerfTest/IPerfTest.cpp utils/IPerfTest/IPerfTest.h Services/HighCompServices/HighCompServices.cpp Services/HighCompServices/HighCompServices.h)
target_link_libraries(controller PRIVATE cpprestsdk::cpprest libiperf.so)